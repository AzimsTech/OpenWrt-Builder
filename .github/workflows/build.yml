name: Build and Publish OpenWrt Image

on:
  workflow_dispatch:  # Allows manual trigger from the Actions tab
    inputs:
        version:
          description: 'OpenWrt Version:'
          required: true
          default: 'SNAPSHOT'
          type: 'choice'
          options:
            - 'SNAPSHOT'
            - '24.10-SNAPSHOT'
            - '23.05-SNAPSHOT'
            - '24.10.0-rc2'
            - '23.05.5'
        packages:
          description: 'Extra Packages:'
          required: false
          default: 'luci'
        scripts:
          description: 'Add uci-defaults scripts?'
          default: true
          type: boolean

permissions:
  contents: write  # Grant write permissions for release creation

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Load secrets
        run: |
          # Load configuration and inject secrets into the config
          sed -i -e 's/^# ssid=".*"/ssid="${{ secrets.WLAN_NAME }}"/' \
                 -e 's/^# ssid_key=".*"/ssid_key="${{ secrets.WLAN_PASS }}"/' \
                 -e 's/^# root_password=".*"/root_password="${{ secrets.ROOT_PASS }}"/' \
                 -e 's/^# pppoe_name=".*"/pppoe_name="${{ secrets.PPPOE_NAME }}"/' \
                 -e 's/^# pppoe_key=".*"/pppoe_key="${{ secrets.PPPOE_PASS }}"/' \
                 files/etc/uci-defaults/99-custom

      - name: Load config
        run: |    
          if [ ${{ github.event.inputs.scripts }} == true ]; then
            files="files"
          else
            files=""
          fi

          cat <<EOF > input_config
          openwrt_version=${{ github.event.inputs.version }}
          packages=${{ github.event.inputs.packages }}
          files=$files
          EOF
          # Append input config to environment variables
          cat input_config >> $GITHUB_ENV  
          # Append config file to environment variables
          cat config >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y \
            build-essential libncurses-dev zlib1g-dev gawk wget git gettext \
            libssl-dev xsltproc rsync unzip python3 python3-distutils zstd

      - name: Download and extract OpenWrt Image Builder
        run: |
          # Determine the OpenWrt version and download appropriate image builder
          version="${{ env.openwrt_version }}"
          target="${{ env.target }}"

          if [[ $version == *SNAPSHOT* ]]; then
            url="https://downloads.openwrt.org/${version}s/targets/${target}/openwrt-imagebuilder-$(echo $target | tr '/' '-').Linux-x86_64.tar.zst"
            wget "$url"
            tar -xvf openwrt-imagebuilder-*.tar.zst
          elif [[ $version < "24.10" ]]; then
            url="https://downloads.openwrt.org/releases/${version}/targets/${target}/openwrt-imagebuilder-${version}-$(echo $target | tr '/' '-').Linux-x86_64.tar.xz"
            wget "$url"
            tar -J -x -f openwrt-imagebuilder-*.tar.xz
          else
            url="https://downloads.openwrt.org/releases/${version}/targets/${target}/openwrt-imagebuilder-${version}-$(echo $target | tr '/' '-').Linux-x86_64.tar.zst"
            wget "$url"
            tar -xvf openwrt-imagebuilder-*.tar.zst
          fi

      - name: Build OpenWrt Image
        run: |
          # Move necessary files and run the build process
          mv files openwrt-imagebuilder-*/
          cd openwrt-imagebuilder-*/
          make image \
            PROFILE="${{ env.profile }}" \
            PACKAGES="${{ env.packages }}" \
            FILES="${{ env.files }}" \
            DISABLED_SERVICES="${{ env.disabled_services }}"

      - name: Write Build Info
        run: |
          # Check if uci-defaults scripts have been added
          if [ "${{ env.files }}" == "files" ]; then
            scripts=true
          else
            scripts=false
          fi

          # Get the target directory and write build info
          target_dir=$(find openwrt-imagebuilder-*/bin/targets/*/*/ -type d -print -quit)
          echo "image_path=$target_dir" >> $GITHUB_ENV

          #Get version code from profiles.json
          version_code=$(grep -o '"version_code":"[^"]*"' $target_dir/profiles.json | awk -F: '{print $2}' | tr -d '"')
          
          cat <<EOF > build_info.md
          ## üí° Custom OpenWrt Build Information
          
          - **OpenWrt Version**: \`${{ env.openwrt_version }}\`
          - **Target**: \`${{ env.target }}\`
          - **Profile**: \`${{ env.profile }}\`
          - **Packages**: \`${{ env.packages }}\`
          - **Disabled Services**: \`${{ env.disabled_services }}\`
          - **Version Code**: \`$version_code\`
          - **UCI Defaults Scripts**: \`$scripts\`
          
          -----
          ### üîê sha256sum

          $(awk '$2 ~ /(sysupgrade|factory|recovery)\.bin$/ {printf "`%s`\n**%s**\n\n", $1, $2}' $target_dir/sha256sums)
          EOF

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}-${{ env.openwrt_version }}
          body_path: build_info.md
          files: |
            ${{ env.image_path }}/*
